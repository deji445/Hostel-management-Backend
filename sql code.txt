CREATE TABLE public.users (
  id       SERIAL         PRIMARY KEY,
  name     TEXT   NOT NULL,
  email    TEXT   NOT NULL UNIQUE,
  password TEXT   NOT NULL,
  role     TEXT   NOT NULL DEFAULT 'student'
);

CREATE TABLE public.hostels (
  id          SERIAL PRIMARY KEY,
  name        TEXT   NOT NULL,
  description TEXT
);

CREATE TABLE public.rooms (
  id         SERIAL PRIMARY KEY,
  hostel_id  INTEGER  NOT NULL REFERENCES public.hostels(id) ON DELETE CASCADE,
  room_number TEXT    NOT NULL,
  capacity    INTEGER NOT NULL,
  occupancy   INTEGER NOT NULL DEFAULT 0,
  photo       TEXT,
  status      TEXT    NOT NULL DEFAULT 'available',
  description TEXT
);

CREATE TABLE public.applications (
  id          SERIAL PRIMARY KEY,
  user_id     INTEGER NOT NULL REFERENCES public.users(id)    ON DELETE CASCADE,
  room_id     INTEGER NOT NULL REFERENCES public.rooms(id)    ON DELETE CASCADE,
  preference  TEXT,
  status      TEXT    NOT NULL DEFAULT 'pending',
  created_at  TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE public.notifications (
  id         SERIAL PRIMARY KEY,
  user_id    INTEGER NOT NULL REFERENCES public.users(id)    ON DELETE CASCADE,
  message    TEXT    NOT NULL,
  read       BOOLEAN NOT NULL DEFAULT FALSE,
  created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);